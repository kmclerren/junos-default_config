#jinja2: lstrip_blocks: True
{% set v4_prefix = site_ipv4_prefix.split(".") %}
{% set v6_prefix = site_ipv6_prefix.split(":") %}
{% set v4_pub_prefix = site_ipv4_public_prefix.split(".") %}
policy-options {
    prefix-list {{ site_name }}_subnets_v4 {
        {{ site_ipv4_prefix }} ;
        {{ routed_block }};
    }
    prefix-list {{ site_name }}_subnets_v6 {
        {{ site_ipv6_prefix }};
    }
    policy-statement DEFAULT_ROUTE_ORIGINATE_v4 {
        from {
            route-filter 0.0.0.0/0 exact;
        }
        then accept;
    }
    policy-statement DEFAULT_ROUTE_ORIGINATE_v6 {
        from {
            route-filter ::0/0 exact;
        }
        then accept;
    }
    policy-statement {{ hub_a_name }}_to_{{ site_name }}_import-v4 {
        term default_route {
            from {
                protocol bgp;
                route-filter 0.0.0.0/0 exact;
            }
            then {
                local-preference 300;
                accept;
            }
        }
        term default_deny {
            then reject;
        }
    }
    policy-statement {{ hub_a_name }}_to_{{ site_name }}_import-v6 {
        term default_route {
            from {
                protocol bgp;
                route-filter ::0/0 exact;
            }
            then {
                local-preference 300;
                accept;
            }
        }
        term default_deny {
            then reject;
        }
    }
    policy-statement deny {
        term deny {
            then reject;
        }
    }
    policy-statement multipath-lb {
        then {
            load-balance per-packet;
        }
    }
    policy-statement {{ site_name }}_to_{{ hub_a_name }}_export-v4 {
        term {{ site_name }}_subnets {
            from {
                prefix-list {{ site_name }}_subnets_v4;
            }
            then {
                next-hop self;
                accept;
            }
        }
        term default_deny {
            then reject;
        }
    }
    policy-statement {{ site_name }}_to_{{ hub_a_name }}_export-v6 {
        term {{ site_name }}_subnets {
            from {
                prefix-list {{ site_name }}_subnets_v6;
            }
            then {
                next-hop self;
                accept;
            }
        }
        term default_deny {
            then reject;
        }
    }
    policy-statement {{ site_name }}_to_{{ hub_b_name }}_export-v4 {
        term {{ site_name }}_subnets {
            from {
                prefix-list {{ site_name }}_subnets_v4;
            }
            then {
                as-path-prepend "{{ site_private_as }} {{ site_private_as }}";
                accept;
            }
        }
        term default_deny {
            then reject;
        }
    }
    policy-statement {{ site_name }}_to_{{ hub_b_name }}_export-v6 {
        term {{ site_name }}_subnets {
            from {
                prefix-list {{ site_name }}_subnets_v6;
            }
            then {
                as-path-prepend "{{ site_private_as }} {{ site_private_as }}";
                accept;
            }
        }
        term default_deny {
            then reject;
        }
    }
    policy-statement {{ hub_b_name }}_to_{{ site_name }}_import-v4 {
        term default_route {
            from {
                protocol bgp;
                route-filter 0.0.0.0/0 exact;
            }
            then accept;
        }
        term default_deny {
            then reject;
        }
    }
    policy-statement {{ hub_b_name }}_to_{{ site_name }}_import-v6 {
        term default_route {
            from {
                protocol bgp;
                route-filter ::0/0 exact;
            }
            then accept;
        }
        term default_deny {
            then reject;
        }
    }
}